<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="63ed6463-9c71-4f5b-88b3-a1d2b4f80d50" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/controller/comment.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/controller/comment_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/controller/fibonacci.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/controller/fibonacci_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Data.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Driver.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Insert.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Mocket.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Mocket_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Select.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helper/mocket/Update.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/Comment.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../../../../pkg/mod/git.do.lot.to/tote/domain@v0.3.8/model/Card.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/endpoints.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/controller/fibonacci.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/controller/comment.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1wAF5v4K63NIMsdhpgeCmbc9bqZ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/helper" />
      <recent name="$PROJECT_DIR$/helper/mocket" />
      <recent name="$PROJECT_DIR$/model" />
      <recent name="$PROJECT_DIR$/constants" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/helper/extra" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_calc in two-in-one/controller">
    <configuration name="Test_CreateComment_Error in two-in-one/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tote-api" />
      <working_directory value="$PROJECT_DIR$/controller" />
      <parameters value=" -testify.m ^Test_CreateComment_Error$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="two-in-one/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCommentSuite\E$/^\QTest_CreateComment_Error\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_CreateComment_Success in two-in-one/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tote-api" />
      <working_directory value="$PROJECT_DIR$/controller" />
      <parameters value=" -testify.m ^Test_CreateComment_Success$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="two-in-one/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCommentSuite\E$/^\QTest_CreateComment_Success\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_DeleteComment_Success in two-in-one/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tote-api" />
      <working_directory value="$PROJECT_DIR$/controller" />
      <parameters value=" -testify.m ^Test_DeleteComment_Success$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="two-in-one/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCommentSuite\E$/^\QTest_DeleteComment_Success\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_GetCommentById_Error in two-in-one/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tote-api" />
      <working_directory value="$PROJECT_DIR$/controller" />
      <parameters value=" -testify.m ^Test_GetCommentById_Error$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="two-in-one/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCommentSuite\E$/^\QTest_GetCommentById_Error\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_calc in two-in-one/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tote-api" />
      <working_directory value="$PROJECT_DIR$/controller" />
      <parameters value=" -testify.m ^Test_calc$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="two-in-one/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestFibonacciSuite\E$/^\QTest_calc\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_calc in two-in-one/controller" />
        <item itemvalue="Go Test.Test_GetCommentById_Error in two-in-one/controller" />
        <item itemvalue="Go Test.Test_CreateComment_Error in two-in-one/controller" />
        <item itemvalue="Go Test.Test_CreateComment_Success in two-in-one/controller" />
        <item itemvalue="Go Test.Test_DeleteComment_Success in two-in-one/controller" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/tote_api$go_test_git_do_lot_to_sportech_tote_api_controller.out" NAME="go test git.do.lot.to/sportech/tote-api/controller Coverage Results" MODIFIED="1630586023344" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/tote_api$TestCalculateBetslipCombinations_KeyBox_in_git_do_lot_to_sportech_tote_api_helper.out" NAME="TestCalculateBetslipCombinations_KeyBox in git.do.lot.to/sportech/tote-api/helper Coverage Results" MODIFIED="1632147275039" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/tote_api$ResultsTestSuite_in_git_do_lot_to_sportech_tote_api_controller.out" NAME="ResultsTestSuite in git.do.lot.to/sportech/tote-api/controller Coverage Results" MODIFIED="1631017648839" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/tote_api$TestGetResults_in_git_do_lot_to_sportech_tote_api_controller.out" NAME="TestGetResults in git.do.lot.to/sportech/tote-api/controller Coverage Results" MODIFIED="1631097464266" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>